x-spark-common: &spark-common
  image: bitnami/spark:3.5.0
  volumes:
    - ./jobs:/opt/bitnami/spark/jobs
    - .//mnt/checkpoints:/mnt/spark-checkpoints
    - ./mnt/spark-state:/mnt/spark-state
  networks:
    - YHSsouna

version: '3.8'

services:
#  Kafka-controller-1:
#    image: apache/kafka:3.8.1
#    container_name: kafka-controller-1
#    environment:
#      KAFKA_NODE_ID: 1
#      KAFKA_PROCESS_ROLES: controller
#      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093
#
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#    networks:
#      - YHSsouna
#    volumes:
#      - controller_data_1:/var/lib/kafka/data



  kafka-controller-1:
    image: apache/kafka:3.8.1
    container_name: kafka-controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093
    networks:
      - YHSsouna
    volumes:
      - controller_data_1:/var/lib/kafka/data

  kafka-controller-2:
    image: apache/kafka:3.8.1
    container_name: kafka-controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
    networks:
      - YHSsouna
    volumes:
      - controller_data_2:/var/lib/kafka/data

  kafka-controller-3:
    image: apache/kafka:3.8.1
    container_name: kafka-controller-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
    networks:
      - YHSsouna
    volumes:
      - controller_data_3:/var/lib/kafka/data

  kafka-broker-1:
    image: apache/kafka:3.8.1
    container_name: kafka-broker-1
    ports:
      - "29092:9092"
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-1:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:19092,EXTERNAL://localhost:29092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    networks:
      - YHSsouna
    volumes:
      - broker_data_1:/var/lib/kafka/data

  kafka-broker-2:
    image: apache/kafka:3.8.1
    container_name: kafka-broker-2
    ports:
      - "29093:9092"
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-2:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:19092,EXTERNAL://localhost:29093
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    networks:
      - YHSsouna
    volumes:
      - broker_data_2:/var/lib/kafka/data

  kafka-broker-3:
    image: apache/kafka:3.8.1
    container_name: kafka-broker-3
    ports:
      - "29094:9092"
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-3:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:19092,EXTERNAL://localhost:29094
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    networks:
      - YHSsouna
    volumes:
      - broker_data_3:/var/lib/kafka/data


  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.1
    container_name: schema-registry
    ports:
      - "18082:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-broker-1:19092,kafka-broker-2:19092,kafka-broker-3:19092
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:18082
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    networks:
      - YHSsouna
#
  console:
    image: docker.redpanda.com/redpandadata/console:v2.5.2
    entrypoint: /bin/sh
    command: |-
      -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    ports:
      - 8080:8080
    depends_on:
      - schema-registry
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: >
        kafka:
          brokers: ["kafka-broker-1:19092","kafka-broker-2:19092","kafka-broker-3:19092"]
          schemaRegistry:
            enabled: true
            urls: ["http://schema-registry:18082"]

        redpanda:
          adminApi:
            enabled: false
            urls: ["http://kafka_broker:9644"]

    networks:
      - YHSsouna



#

  spark-master:
    <<: *spark-common
    command: bin/spark-class  org.apache.spark.deploy.master.Master
    ports:
      - "9190:8080"
      - "7077:7077"
      - "4040:4040"
      - "8081:8081"
  spark-workers: &spark-worker-image
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2G
      SPARK_MASTER_URL: spark://spark-master:7077
  spark-worker-2:
    <<: *spark-worker-image
  spark-worker-3:
    <<: *spark-worker-image


volumes:
  controller_data_1:
  controller_data_2:
  controller_data_3:
  broker_data_1:
  broker_data_2:
  broker_data_3:
networks:
  YHSsouna:
    driver: bridge




#  Kafka-controller-2:
#    image: apache/kafka:3.8.1
#    container_name: kafka-controller-2
#    environment:
#      KAFKA_NODE_ID: 2
#      KAFKA_PROCESS_ROLES: controller
#      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9093  # Binding to all available network interfaces
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT  # Define security protocol
#      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT  # Set security protocol for controller listener
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
#
#    networks:
#      - YHSsouna
#    volumes:
#      - controller_data_2:/var/lib/kafka/data
#
#  Kafka-controller-3:
#    image: apache/kafka:3.8.1
#    container_name: kafka-controller-3
#    environment:
#      KAFKA_NODE_ID: 3
#      KAFKA_PROCESS_ROLES: controller
#      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9093  # Binding to all available network interfaces
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT  # Define security protocol
#      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT  # Set security protocol for controller listener
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
#    networks:
#      - YHSsouna
#    volumes:
#      - controller_data_3:/var/lib/kafka/data

#  kafka-broker-1:
#    image: apache/kafka:3.8.1
#    container_name: kafka-broker-1
#    ports:
#      - "29092:9092"
#    environment:
#      KAFKA_NODE_ID: 4
#      KAFKA_PROCESS_ROLES: broker
#      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-1:19092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:19092
#    depends_on:
#      - Kafka-controller-1
#    networks:
#      - YHSsouna
#    volumes:
#      - broker_data_1:/var/lib/kafka/data
#  kafka-broker-2:
#    image: apache/kafka:3.8.1
#    container_name: kafka-broker-2
#    ports:
#      - "29093:9092"
#    environment:
#      KAFKA_NODE_ID: 5
#      KAFKA_PROCESS_ROLES: broker
#      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-2:19093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:19093
#    depends_on:
#      - Kafka-controller-1
#      - Kafka-controller-2
#      - Kafka-controller-3
#    volumes:
#      - broker_data_2:/var/lib/kafka/data
#    networks:
#      - YHSsouna
#
#  kafka-broker-3:
#    image: apache/kafka:3.8.1
#    container_name: kafka-broker-3
#    ports:
#      - "29094:9092"
#    environment:
#      KAFKA_NODE_ID: 6
#      KAFKA_PROCESS_ROLES: broker
#      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-3:19094
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:19094
#    depends_on:
#      - Kafka-controller-1
#      - Kafka-controller-2
#      - Kafka-controller-3
#    volumes:
#      - broker_data_3:/var/lib/kafka/data
#    networks:
#      - YHSsouna